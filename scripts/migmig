#!/usr/bin/env python
##
##  runner script (migmig !!). users start the program by calling this script
##
##  Note:  Make sure that "python" refers to "python2.*" in your env variables.
##
#
# examples :
#   runner get http://example.com/file.zip
#   runner -x8 -t10 -s5 http://example.com/file.zip
#   runner status <hash string>
#   runner merge ~/Downloads/dir1 ~/Downloads/dir2
#
# Note:
#   <Name> is a positional argument.
#   [Name] is an optional argument .


"""
Usage:
  migmig (-h | --help)
  migmig --version
  migmig get <identifier> [-v...] [-s NAME] [-d NAME] [-D] [-x NAME] [-t NAME] [-n NAME] [--console] [(--http-user NAME --http-password NAME)]
  migmig status <identifier>
  migmig release <identifier>
  migmig merge [<main_dir>] [<to_merge_dir>]
  migmig update
  

Options:
  -h --help                       Show this screen.
  --version                       Show version.
  -v --verbose                    Show debugs.
  --console                       Show the logs in console. [default: 0]
  -s, --chunk-size <var>          Minimum size of chunks. Not recommended to use this option!
  -d, --directory <var>           Destination directory to download the chunks into it. [default: ~/Downloads/migmig]
  -D, --daemon                    Start the program as daemon. dont show progress bar.
  -x, --max-conn <var>            Maximum number of connections per server. [default: 6]
  -t, --retries <var>             Maximum number of tries when download fails. [default: 3]
  -n, --number-of-clients <var>   Specify how many clients are going to download a file. [default: 1]
  --http-user <var>
  --http-password <var>

"""



from migmig.core import Core
from migmig import docopt

Core(docopt.docopt(__doc__, version='migmig 0.1'))
